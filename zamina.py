import os
import re
import shutil
from docx import Document
from docx.enum.text import WD_ALIGN_PARAGRAPH
from docxcompose.composer import Composer

# üî∑ –®–ª—è—Ö–∏
folder_path = r"C:\Users\1\Desktop\–ù–∞–≤—á–∞–ª—å–Ω–∞ —á–∞—Å—Ç–∏–Ω–∞\–ü–†–∑-31"
dyploma_path = r"C:\Users\1\Desktop\test.docx"

# üîÅ –°–ª–æ–≤–Ω–∏–∫ –∑–∞–º—ñ–Ω
replacements = {
    '–ù–∞–∑–≤–∞ –∫–≤–∞–ª—ñ—Ñ—ñ–∫–∞—Ü—ñ—ó —Ç–∞ –ø—Ä–∏—Å–≤–æ—î–Ω–∏–π —Å—Ç—É–ø—ñ–Ω—å': '–ù–∞–∑–≤–∞ –æ—Å–≤—ñ—Ç–Ω—å–æ—ó –∫–≤–∞–ª—ñ—Ñ—ñ–∫–∞—Ü—ñ—ó —Ç–∞ –ø—Ä–∏—Å–≤–æ—î–Ω–∏–π –æ—Å–≤—ñ—Ç–Ω—å–æ-–ø—Ä–æ—Ñ–µ—Å—ñ–π–Ω–∏–π —Å—Ç—É–ø—ñ–Ω—å (–º–æ–≤–æ—é –æ—Ä–∏–≥—ñ–Ω–∞–ª—É)',
    'Name of qualification and (if applicable) title conferred': 'Name of educational qualification and educational-professional degree conferred (in original language)',
    '–°—Ç—É–ø—ñ–Ω—å –≤–∏—â–æ—ó –æ—Å–≤—ñ—Ç–∏': '–û—Å–≤—ñ—Ç–Ω—å–æ-–ø—Ä–æ—Ñ–µ—Å—ñ–π–Ω–∏–π —Å—Ç—É–ø—ñ–Ω—å —Ñ–∞—Ö–æ–≤–æ—ó –ø–µ—Ä–µ–¥–≤–∏—â–æ—ó –æ—Å–≤—ñ—Ç–∏',
    'Degree': 'Professional pre-higher education educational-professional degree',
    '–ü—Ä–æ—Ñ–µ—Å—ñ–π–Ω–∞ –∫–≤–∞–ª—ñ—Ñ—ñ–∫–∞—Ü—ñ—è (—É —Ä–∞–∑—ñ –ø—Ä–∏—Å–≤–æ—î–Ω–Ω—è)': '–û—Å–≤—ñ—Ç–Ω—å–æ-–ø—Ä–æ—Ñ–µ—Å—ñ–π–Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–∞',
    'Professional Qualification (if awarded)': 'Educational-professional programme',

#nen
    '‚Äì': '–ü—Ä–∞–≤–æ–∑–Ω–∞–≤—Å—Ç–≤–æ',

    '–û—Å–Ω–æ–≤–Ω–∞ (–æ—Å–Ω–æ–≤–Ω—ñ) –≥–∞–ª—É–∑—å (–≥–∞–ª—É–∑—ñ) –∑–Ω–∞–Ω—å –∑–∞ –∫–≤–∞–ª—ñ—Ñ—ñ–∫–∞—Ü—ñ—î—é': '–ü—Ä–æ—Ñ–µ—Å—ñ–π–Ω–∞ –∫–≤–∞–ª—ñ—Ñ—ñ–∫–∞—Ü—ñ—è (—É —Ä–∞–∑—ñ –ø—Ä–∏—Å–≤–æ—î–Ω–Ω—è)',
    'Main field(s) of study for the qualification': 'Professional qualification (if awarded)',

#nen
    '08 –ü—Ä–∞–≤–æ': '‚Äì',
    '08 Law': '‚Äì',


    '–ù–∞–π–º–µ–Ω—É–≤–∞–Ω–Ω—è —ñ —Å—Ç–∞—Ç—É—Å –∑–∞–∫–ª–∞–¥—É (—è–∫—â–æ –≤—ñ–¥–º—ñ–Ω–Ω—ñ –≤—ñ–¥ –ø. 2.3), —è–∫–∏–π —Ä–µ–∞–ª—ñ–∑—É—î –æ—Å–≤—ñ—Ç–Ω—é –ø—Ä–æ–≥—Ä–∞–º—É': '',
    'Name and status of institution (if different from 2.3)': '',
    'administering studies': '',
    '–ó–∞–∑–Ω–∞—á–µ–Ω–æ —É –ø—É–Ω–∫—Ç—ñ 2.3': '',
    'Specified in 2.3': '',
    '2.4': '',
    '2.5': '2.4',
    '6.2.5': '6.2.5',
    '–ü–†–û –†–Ü–í–ï–ù–¨ –ö–í–ê–õ–Ü–§–Ü–ö–ê–¶–Ü–á': '–ü–†–û –ö–í–ê–õ–Ü–§–Ü–ö–ê–¶–Ü–Æ',
    'INFORMATION ON THE LEVEL AND DURATION OF THE QUALIFICATION': 'INFORMATION ON THE LEVEL OF QUALIFICATION AND LENGTH OF PROGRAMME',
    '–¢—Ä–∏–≤–∞–ª—ñ—Å—Ç—å –æ—Å–≤—ñ—Ç–Ω—å–æ—ó –ø—Ä–æ–≥—Ä–∞–º–∏ –≤ –∫—Ä–µ–¥–∏—Ç–∞—Ö —Ç–∞/–∞–±–æ —Ä–æ–∫–∞—Ö': '–û—Ñ—ñ—Ü—ñ–π–Ω–∞ —Ç—Ä–∏–≤–∞–ª—ñ—Å—Ç—å –æ—Å–≤—ñ—Ç–Ω—å–æ-–ø—Ä–æ—Ñ–µ—Å—ñ–π–Ω–æ—ó –ø—Ä–æ–≥—Ä–∞–º–∏ –≤ –∫—Ä–µ–¥–∏—Ç–∞—Ö —Ç–∞/–∞–±–æ —Ä–æ–∫–∞—Ö',
    'Official duration of programme in credits and/or years': 'Official length of educational-professional programme in credits and/or years',
    '–Ü–ù–§–û–†–ú–ê–¶–Ü–Ø –ü–†–û –ó–ê–í–ï–†–®–ï–ù–£ –û–°–í–Ü–¢–ù–Æ –ü–†–û–ì–†–ê–ú–£ –¢–ê –ó–î–û–ë–£–¢–Ü –†–ï–ó–£–õ–¨–¢–ê–¢–ò –ù–ê–í–ß–ê–ù–ù–Ø': '–Ü–ù–§–û–†–ú–ê–¶–Ü–Ø –ü–†–û –ó–ê–í–ï–†–®–ï–ù–£ –û–°–í–Ü–¢–ù–¨–û-–ü–†–û–§–ï–°–Ü–ô–ù–£ –ü–†–û–ì–†–ê–ú–£ –¢–ê –ó–î–û–ë–£–¢–Ü –†–ï–ó–£–õ–¨–¢–ê–¢–ò –ù–ê–í–ß–ê–ù–ù–Ø',
    'INFORMATION ON THE PROGRAMME COMPLETED AND THE RESULTS OBTAINED': 'INFORMATION ON THE COMPLETED EDUCATIONAL-PROFESSIONAL PROGRAMME AND LEARNING OUTCOMES',
    '–ù–∞–π–º–µ–Ω—É–≤–∞–Ω–Ω—è –≤—Å—ñ—Ö –∑–∞–∫–ª–∞–¥—ñ–≤ –≤–∏—â–æ—ó –æ—Å–≤—ñ—Ç–∏ (–Ω–∞—É–∫–æ–≤–∏—Ö —É—Å—Ç–∞–Ω–æ–≤) (–≤—ñ–¥–æ–∫—Ä–µ–º–ª–µ–Ω–∏—Ö —Å—Ç—Ä—É–∫—Ç—É—Ä–Ω–∏—Ö –ø—ñ–¥—Ä–æ–∑–¥—ñ–ª—ñ–≤ –∑–∞–∫–ª–∞–¥—ñ–≤ –≤–∏—â–æ—ó –æ—Å–≤—ñ—Ç–∏), —É —è–∫–∏—Ö –∑–¥–æ–±—É–≤–∞–ª–∞—Å—è –∫–≤–∞–ª—ñ—Ñ—ñ–∫–∞—Ü—ñ—è (—É —Ç–æ–º—É —á–∏—Å–ª—ñ –∑–∞–∫–ª–∞–¥–∏ –æ—Å–≤—ñ—Ç–∏, –≤ —è–∫–∏—Ö –∑–¥–æ–±—É–≤–∞—á –≤–∏—â–æ—ó –æ—Å–≤—ñ—Ç–∏ –≤–∏–≤—á–∞–≤ –æ–∫—Ä–µ–º—ñ –¥–∏—Å—Ü–∏–ø–ª—ñ–Ω–∏ –∑–∞ –ø—Ä–æ–≥—Ä–∞–º–∞–º–∏ –∞–∫–∞–¥–µ–º—ñ—á–Ω–æ—ó –º–æ–±—ñ–ª—å–Ω–æ—Å—Ç—ñ)': '–ù–∞–π–º–µ–Ω—É–≤–∞–Ω–Ω—è –≤—Å—ñ—Ö –∑–∞–∫–ª–∞–¥—ñ–≤ —Ñ–∞—Ö–æ–≤–æ—ó –ø–µ—Ä–µ–¥–≤–∏—â–æ—ó –æ—Å–≤—ñ—Ç–∏ (—Å—Ç—Ä—É–∫—Ç—É—Ä–Ω–∏—Ö –ø—ñ–¥—Ä–æ–∑–¥—ñ–ª—ñ–≤ –∞–±–æ —Ñ—ñ–ª—ñ–π –∑–∞–∫–ª–∞–¥—ñ–≤ —Ñ–∞—Ö–æ–≤–æ—ó –ø–µ—Ä–µ–¥–≤–∏—â–æ—ó –æ—Å–≤—ñ—Ç–∏), —É —è–∫–∏—Ö –∑–¥–æ–±—É–≤–∞–ª–∞—Å—è –æ—Å–≤—ñ—Ç–Ω—è –∫–≤–∞–ª—ñ—Ñ—ñ–∫–∞—Ü—ñ—è (—É —Ç–æ–º—É —á–∏—Å–ª—ñ –∑–∞–∫–ª–∞–¥–∏ –æ—Å–≤—ñ—Ç–∏, –≤ —è–∫–∏—Ö –∑–¥–æ–±—É–≤–∞—á —Ñ–∞—Ö–æ–≤–æ—ó –ø–µ—Ä–µ–¥–≤–∏—â–æ—ó –æ—Å–≤—ñ—Ç–∏ –≤–∏–≤—á–∞–≤ –æ–∫—Ä–µ–º—ñ –¥–∏—Å—Ü–∏–ø–ª—ñ–Ω–∏ –∑–∞ –ø—Ä–æ–≥—Ä–∞–º–∞–º–∏ –∞–∫–∞–¥–µ–º—ñ—á–Ω–æ—ó –º–æ–±—ñ–ª—å–Ω–æ—Å—Ç—ñ)',
  'Name of all higher education (research)  s (separate structural units of higher education s) where the qualification has been gained (including education s where the holder of the qualification has been studying separate course units within the framework(s) of academic mobility)':
  'Names of all higher education (research) institutions (separate structural units of higher education institutions) where the qualification has been gained (including education institutions where the holder of the qualification has been studying separate course units within the framework(s) of academic mobility)',


    '–∑–∞–∫–ª–∞–¥—É –≤–∏—â–æ—ó –æ—Å–≤—ñ—Ç–∏ (–Ω–∞—É–∫–æ–≤–æ—ó —É—Å—Ç–∞–Ω–æ–≤–∏)': '–∑–∞–∫–ª–∞–¥—É —Ñ–∞—Ö–æ–≤–æ—ó –ø–µ—Ä–µ–¥–≤–∏—â–æ—ó –æ—Å–≤—ñ—Ç–∏ (—ñ–Ω—à–æ–≥–æ —Å—É–±‚Äô—î–∫—Ç–∞ –æ—Å–≤—ñ—Ç–Ω—å–æ—ó –¥—ñ—è–ª—å–Ω–æ—Å—Ç—ñ)',
    'institution':'',
    'Contact information of the higher education (research)':'Contact information of the professional pre-higher education institution (other educational entity)',
    '–ö–µ—Ä—ñ–≤–Ω–∏–∫ –∞–±–æ —É–ø–æ–≤–Ω–æ–≤–∞–∂–µ–Ω–∞ –æ—Å–æ–±–∞ –∑–∞–∫–ª–∞–¥—É –≤–∏—â–æ—ó –æ—Å–≤—ñ—Ç–∏': '–ö–µ—Ä—ñ–≤–Ω–∏–∫ –∞–±–æ —É–ø–æ–≤–Ω–æ–≤–∞–∂–µ–Ω–∞ –æ—Å–æ–±–∞ –∑–∞–∫–ª–∞–¥—É —Ñ–∞—Ö–æ–≤–æ—ó –ø–µ—Ä–µ–¥–≤–∏—â–æ—ó –æ—Å–≤—ñ—Ç–∏',
    'Capacity': 'Head or other authorized person of professional pre-higher education institution',
    '–ü–æ—Å–∞–¥–∞ –∫–µ—Ä—ñ–≤–Ω–∏–∫–∞ –∞–±–æ —ñ–Ω—à–æ—ó —É–ø–æ–≤–Ω–æ–≤–∞–∂–µ–Ω–æ—ó –æ—Å–æ–±–∏ –∑–∞–∫–ª–∞–¥—É –≤–∏—â–æ—ó –æ—Å–≤—ñ—Ç–∏ (–Ω–∞—É–∫–æ–≤–æ—ó —É—Å—Ç–∞–Ω–æ–≤–∏)': '–ü–æ—Å–∞–¥–∞ –∫–µ—Ä—ñ–≤–Ω–∏–∫–∞ –∞–±–æ —ñ–Ω—à–æ—ó —É–ø–æ–≤–Ω–æ–≤–∞–∂–µ–Ω–æ—ó –æ—Å–æ–±–∏ –∑–∞–∫–ª–∞–¥—É —Ñ–∞—Ö–æ–≤–æ—ó –ø–µ—Ä–µ–¥–≤–∏—â–æ—ó –æ—Å–≤—ñ—Ç–∏',
    'Position of the Head or another authorized person of the Higher Education (Research) Institution': 'Position of the professional pre-higher education institution head or other authorized person',
    '–ü–µ—á–∞—Ç–∫–∞': '–û—Ñ—ñ—Ü—ñ–π–Ω–∞ –ø–µ—á–∞—Ç–∫–∞',
    'Official stamp or seal': 'Official Seal',
    '8. –Ü–ù–§–û–†–ú–ê–¶–Ü–Ø –ü–†–û –ù–ê–¶–Ü–û–ù–ê–õ–¨–ù–£ –°–ò–°–¢–ï–ú–£ –í–ò–©–û–á –û–°–í–Ü–¢–ò': '',
    '–Ü–ù–§–û–†–ú–ê–¶–Ü–Ø –ü–†–û –°–ò–°–¢–ï–ú–£ –§–ê–•–û–í–û–á –ü–ï–†–ï–î–í–ò–©–û–á –û–°–í–Ü–¢–ò': '',
}

keys_to_format = ['–û—Ñ—ñ—Ü—ñ–π–Ω–∞ –ø–µ—á–∞—Ç–∫–∞', 'Official Seal']

def replace_text_in_cell(cell):
    for paragraph in cell.paragraphs:
        runs = paragraph.runs
        if not runs:
            continue

        full_text_before = ''.join(run.text for run in runs)
        full_text_after = full_text_before

        for old, new in replacements.items():
            full_text_after = full_text_after.replace(old, new)

        if full_text_after != full_text_before:
            print(f"üîÅ –ó–∞–º—ñ–Ω–∞ –≤ —Ç–∞–±–ª–∏—Ü—ñ:\n  –î–æ: {full_text_before}\n  –ü—ñ—Å–ª—è: {full_text_after}")

            first_run = runs[0]
            for run in runs:
                run.text = ''

            new_run = paragraph.add_run(full_text_after)
            new_run.font.name = first_run.font.name
            new_run.font.size = first_run.font.size
            new_run.font.bold = first_run.font.bold
            new_run.font.italic = first_run.font.italic
            if first_run.font.color and first_run.font.color.rgb:
                new_run.font.color.rgb = first_run.font.color.rgb

            if any(key in full_text_after for key in keys_to_format):
                paragraph.alignment = WD_ALIGN_PARAGRAPH.JUSTIFY


def process_docx(file_path, dyploma_path):
    try:
        doc = Document(file_path)
        for table in doc.tables:
            for row in table.rows:
                for cell in row.cells:
                    replace_text_in_cell(cell)

        doc.save(file_path)
        print(f"üíæ –ó–±–µ—Ä–µ–∂–µ–Ω–æ: {os.path.basename(file_path)}")
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –≤ {file_path}: {e}")

def main():
    if not os.path.exists(folder_path):
        print(f"‚ùå –ü–∞–ø–∫–∞ {folder_path} –Ω–µ —ñ—Å–Ω—É—î")
        return

    for filename in os.listdir(folder_path):
        if filename.endswith('.docx') and not filename.startswith('~$'):
            full_path = os.path.join(folder_path, filename)
            print(f"\nüìÑ –ü–æ—á–∏–Ω–∞—î–º–æ: {filename}")
            process_docx(full_path, dyploma_path)

    print("\nüéâ –û–±—Ä–æ–±–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")

if __name__ == '__main__':
    main()
