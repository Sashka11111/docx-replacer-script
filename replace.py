import os
from docx import Document
from docx.shared import Cm, Pt

# üìÅ –®–ª—è—Ö –¥–æ –ø–∞–ø–∫–∏
folder_path = r"C:\Users\1\Desktop\–ó–í-41"

# üîç –¢–µ–∫—Å—Ç –¥–ª—è –ø–æ—à—É–∫—É
target_paragraphs = [
    {
        "ukr": "–ù–∞–∑–≤–∞ –æ—Å–≤—ñ—Ç–Ω—å–æ—ó –∫–≤–∞–ª—ñ—Ñ—ñ–∫–∞—Ü—ñ—ó —Ç–∞ –ø—Ä–∏—Å–≤–æ—î–Ω–∏–π –æ—Å–≤—ñ—Ç–Ω—å–æ-–ø—Ä–æ—Ñ–µ—Å—ñ–π–Ω–∏–π —Å—Ç—É–ø—ñ–Ω—å (–º–æ–≤–æ—é –æ—Ä–∏–≥—ñ–Ω–∞–ª—É)",
        "eng": "Name of educational qualification and educational-professional degree conferred (in original language)",
        "number": "2.1"
    },
    {
        "ukr": "–û—Å–≤—ñ—Ç–Ω—å–æ-–ø—Ä–æ—Ñ–µ—Å—ñ–π–Ω–∏–π —Å—Ç—É–ø—ñ–Ω—å —Ñ–∞—Ö–æ–≤–æ—ó –ø–µ—Ä–µ–¥–≤–∏—â–æ—ó –æ—Å–≤—ñ—Ç–∏",
        "eng": "Professional pre-higher education educational-professional degree",
        "number": "2.1.1"
    }
]

def copy_paragraph_formatting(source_paragraph, target_paragraph, text, indent_cm, bold=True, size_pt=9.5):
    """–ö–æ–ø—ñ—é—î —Ñ–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è –∞–±–∑–∞—Ü—É —Ç–∞ –¥–æ–¥–∞—î —Ç–µ–∫—Å—Ç —ñ–∑ –∑–∞–¥–∞–Ω–∏–º —Å—Ç–∏–ª–µ–º"""
    target_paragraph.paragraph_format.alignment = source_paragraph.paragraph_format.alignment
    target_paragraph.paragraph_format.left_indent = Cm(indent_cm)
    target_paragraph.paragraph_format.right_indent = source_paragraph.paragraph_format.right_indent
    target_paragraph.paragraph_format.space_before = source_paragraph.paragraph_format.space_before
    target_paragraph.paragraph_format.space_after = source_paragraph.paragraph_format.space_after
    target_paragraph.paragraph_format.line_spacing = source_paragraph.paragraph_format.line_spacing

    target_run = target_paragraph.add_run(text)
    if source_paragraph.runs:
        source_run = source_paragraph.runs[0]
        target_run.font.name = source_run.font.name
        target_run.font.color.rgb = source_run.font.color.rgb
        target_run.font.italic = source_run.font.italic
        target_run.font.underline = source_run.font.underline
    target_run.font.size = Pt(size_pt)
    target_run.font.bold = bold

def replace_exact_lines(doc):
    for paragraph in doc.paragraphs:
        text = paragraph.text.strip()
        for target in target_paragraphs:
            if target["ukr"] in text and target["eng"] in text:
                # üß† –í–∏–∑–Ω–∞—á–∞—î–º–æ, —Å–∫—ñ–ª—å–∫–∏ —Ä—è–¥–∫—ñ–≤ –±—É–¥–µ –≤ —Ç–∞–±–ª–∏—Ü—ñ
                is_211 = target["number"] == "2.1.1"
                table_rows = 2 if is_211 else 1

                # üî∏ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞–±–ª–∏—Ü—ñ
                table = doc.add_table(rows=table_rows, cols=2)
                table.autofit = False
                section = doc.sections[0]
                page_width = section.page_width.cm - section.left_margin.cm - section.right_margin.cm
                column_width = page_width / 2
                table.columns[0].width = Cm(column_width)
                table.columns[1].width = Cm(column_width)

                # üîπ –ü–µ—Ä—à–∏–π —Ä—è–¥–æ–∫ ‚Äî –∂–∏—Ä–Ω–∏–π
                cell_ukr_1 = table.cell(0, 0)
                cell_eng_1 = table.cell(0, 1)
                copy_paragraph_formatting(paragraph, cell_ukr_1.paragraphs[0],
                                          f"{target['number']} {target['ukr']}", indent_cm=0.2, bold=True)
                copy_paragraph_formatting(paragraph, cell_eng_1.paragraphs[0],
                                          f"{target['number']} {target['eng']}", indent_cm=0, bold=True)

                # üîπ –î—Ä—É–≥–∏–π —Ä—è–¥–æ–∫ ‚Äî –∑–≤–∏—á–∞–π–Ω–∏–π —Ç—ñ–ª—å–∫–∏ –¥–ª—è 2.1.1
                if is_211:
                    cell_ukr_2 = table.cell(1, 0)
                    cell_eng_2 = table.cell(1, 1)
                    copy_paragraph_formatting(paragraph, cell_ukr_2.paragraphs[0],
                                              "–§–∞—Ö–æ–≤–∏–π –º–æ–ª–æ–¥—à–∏–π –±–∞–∫–∞–ª–∞–≤—Ä", indent_cm=0.2, bold=False)
                    copy_paragraph_formatting(paragraph, cell_eng_2.paragraphs[0],
                                              "Professional junior bachelor", indent_cm=0, bold=False)

                # üóë –í–∏–¥–∞–ª–∏—Ç–∏ —Ä–æ–∑—Ä–∏–≤ —Ä–æ–∑–¥—ñ–ª—É –ø—ñ—Å–ª—è –∞–±–∑–∞—Ü—É, —è–∫—â–æ —î
                next_el = paragraph._element.getnext()
                if next_el is not None and next_el.tag.endswith('sectPr'):
                    paragraph._element.getparent().remove(next_el)
                    print("üóë –í–∏–¥–∞–ª–µ–Ω–æ —Ä–æ–∑—Ä–∏–≤ —Ä–æ–∑–¥—ñ–ª—É –ø—ñ—Å–ª—è –∞–±–∑–∞—Ü—É")

                # ‚ûï –í—Å—Ç–∞–≤–∏—Ç–∏ —Ç–∞–±–ª–∏—Ü—é –ø–µ—Ä–µ–¥ –∞–±–∑–∞—Ü–æ–º
                paragraph._element.addprevious(table._element)

                # üóë –í–∏–¥–∞–ª–∏—Ç–∏ —Å—Ç–∞—Ä–∏–π –∞–±–∑–∞—Ü
                paragraph._element.getparent().remove(paragraph._element)

                print(f"‚úÖ –ó–∞–º—ñ–Ω–µ–Ω–æ: {target['number']}")
    return doc

def process_docx(file_path):
    try:
        doc = Document(file_path)
        for section in doc.sections:
            print(f"üìè –ü–æ–ª—è –¥–æ–∫—É–º–µ–Ω—Ç–∞: –ª—ñ–≤–µ={section.left_margin.cm} —Å–º, –ø—Ä–∞–≤–µ={section.right_margin.cm} —Å–º, "
                  f"–≤–µ—Ä—Ö–Ω—î={section.top_margin.cm} —Å–º, –Ω–∏–∂–Ω—î={section.bottom_margin.cm} —Å–º")
        doc = replace_exact_lines(doc)
        output_path = file_path
        doc.save(output_path)
        print(f"üíæ –ó–±–µ—Ä–µ–∂–µ–Ω–æ: {os.path.basename(output_path)}")
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ —É {os.path.basename(file_path)}: {str(e)}")

# üîÅ –û–±—Ä–æ–±–∫–∞ –≤—Å—ñ—Ö .docx —É –ø–∞–ø—Ü—ñ
for filename in os.listdir(folder_path):
    if filename.endswith(".docx") and not filename.startswith("~$"):
        process_docx(os.path.join(folder_path, filename))

print("üéâ –ì–æ—Ç–æ–≤–æ! –¢–∞–±–ª–∏—Ü—ñ –≤—Å—Ç–∞–≤–ª–µ–Ω—ñ: –ø—É–Ω–∫—Ç 2.1 ‚Äî –æ–¥–∏–Ω —Ä—è–¥–æ–∫, –ø—É–Ω–∫—Ç 2.1.1 ‚Äî –¥–≤–∞ —Ä—è–¥–∫–∏ –∑ –∫–≤–∞–ª—ñ—Ñ—ñ–∫–∞—Ü—ñ—î—é.")
